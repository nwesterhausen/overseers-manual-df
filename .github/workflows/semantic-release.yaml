name: 'Semantic Release (and Publish)'
on:
  push:
    branches:
      - main

env:
  # sccache enablement
  SCCACHE_GHA_ENABLED: true
  RUSTC_WRAPPER: sccache

jobs:
  semantic-release:
    name: 'Semantic Release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          token: ${{ secrets.PAT_GH_TOKEN }}
      - name: Setup Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version-file: .nvmrc

      - name: Install bun
        uses: oven-sh/setup-bun@8f24390df009a496891208e5e36b8a1de1f45135 #v1

      - name: Process Semantic-release
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GH_TOKEN }}
        run: bunx semantic-release
    outputs:
      new-release-published: ${{ steps.get-next-version.outputs.new-release-published }}
      new-release-version: ${{ steps.get-next-version.outputs.new-release-version }}
  publish-tauri:
    needs:
      - semantic-release
    if: needs.semantic-release.outputs.new-release-published == 'true'
    name: 'Publish Tauri App'
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version-file: .nvmrc
      - name: Install bun
        uses: oven-sh/setup-bun@8f24390df009a496891208e5e36b8a1de1f45135 #v1

      - name: Set Updated Version
        run: bash version ${{ needs.semantic-release.outputs.new-release-version }}

      - name: Create Fake .env File (dotenvy_macro requirement)
        run: |
          touch src-tauri/.env
          echo APTABASE_KEY=${{ secrets.APTABASE_KEY }} >> src-tauri/.env

      - name: Install Dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev \
              build-essential \
              curl \
              wget \
              file \
              libssl-dev \
              libgtk-3-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev
          sudo apt-get install -y javascriptcoregtk-4.1 \
              libsoup-3.0 \
              webkit2gtk-4.1

      - name: Install Rust
        uses: dtolnay/rust-toolchain@bb45937a053e097f8591208d8e74c90db1873d07 # master
        with:
          toolchain: stable
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@2e7f9ec7921547d4b46598398ca573513895d0bd # 0.0.4
      - name: Install Dependencies and Build
        run: |
          bun install
          bun run build

      - name: Build the Tauri App
        uses: tauri-apps/tauri-action@32165c22c317182abb119ad267da7eeb375cb8aa # dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'v__VERSION__'
          releaseDraft: true
          prerelease: false

      - name: Show sccache stats
        shell: bash
        run: |
          echo '## SCCACHE STATS' >> $GITHUB_STEP_SUMMARY
          echo '| Metric | Value |' >> $GITHUB_STEP_SUMMARY
          echo '|--------|-------|' >> $GITHUB_STEP_SUMMARY
          ${SCCACHE_PATH} --show-stats | awk -F'[[:space:]][[:space:]]+' 'NR<=22{ print "| "$1" | "$2" |"}' >> $GITHUB_STEP_SUMMARY
          echo '</hr>' >> $GITHUB_STEP_SUMMARY
