name: Test Build
permissions:
  contents: read
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: {}
env:
  CARGO_TERM_COLOR: always
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: rust
  cancel-in-progress: false
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3
        with:
          version: latest
      - name: Node Setup
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Create Fake .env File (dotenvy_macro requirement)
        run: |
          touch src-tauri/.env
          echo APTABASE_KEY=${{ secrets.APTABASE_KEY }} >> src-tauri/.env

      - name: Install Dependencies
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends libwebkit2gtk-4.0-dev \
              build-essential \
              curl \
              wget \
              file \
              libssl-dev \
              libgtk-3-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev
          sudo apt-get install --no-install-recommends javascriptcoregtk-4.1 \
              libsoup-3.0 \
              webkit2gtk-4.1

      - name: Rust Cache
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.toml') }}
      - name: Rust setup
        uses: dtolnay/rust-toolchain@be73d7920c329f220ce78e0234b8f96b7ae60248 # master
        with:
          toolchain: stable
      - name: Install Client Dependencies & Build
        run: |
          pnpm install
          pnpm build

      - name: Build the Tauri App
        run: pnpm tauri build --bundles none
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_PRIVATE_KEY_PASSWORD }}
  clippy:
    name: Clippy Check
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3
        with:
          version: latest
      - name: Node Setup
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        with:
          node-version-file: .nvmrc
          cache: pnpm
      - name: Install Dependencies
      # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends libwebkit2gtk-4.0-dev \
              build-essential \
              curl \
              wget \
              file \
              libssl-dev \
              libgtk-3-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev
          sudo apt-get install --no-install-recommends javascriptcoregtk-4.1 \
              libsoup-3.0 \
              webkit2gtk-4.1

      - name: Create .env
        run: |
          touch src-tauri/.env
          echo APTABASE_KEY=${{ secrets.APTABASE_KEY }} >> src-tauri/.env
      - name: Install Client Dependencies & Build
        run: |
          pnpm install
          pnpm build
      - name: Cache
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.toml') }}
      - name: Rust setup
        uses: dtolnay/rust-toolchain@be73d7920c329f220ce78e0234b8f96b7ae60248 # master
        with:
          toolchain: stable
      - name: Run clippy
        run: |
          cd src-tauri
          cargo clippy -- -D warnings
