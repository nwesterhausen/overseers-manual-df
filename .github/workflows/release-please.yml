on:
  push:
    branches:
      - main
permissions: read-all

env:
  CARGO_TERM_COLOR: always
  # sccache enablement
  SCCACHE_GHA_ENABLED: true
  RUSTC_WRAPPER: sccache

name: Release Please

jobs:
  release-please:
    name: Release Please
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          # this assumes that you have created a personal access token
          # (PAT) and configured it as a GitHub action secret named
          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
          token: ${{ secrets.GITHUB_TOKEN }}
          # this is a built-in strategy in release-please, see "Action Inputs"
          # for more options
          release-type: node
          # a configuration file that tells release-please how to bump
          # versions and create releases
          config-file: .github/release-please-config.json
          # manifest file for initial version
          manifest-file: .github/release-please-manifest.json
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
  publish-tauri:
    needs:
      - release-please
    if: needs.release-please.outputs.releases_created == 'true'
    name: 'Publish Tauri App'
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      - name: Install bun
        uses: oven-sh/setup-bun@8f24390df009a496891208e5e36b8a1de1f45135 #v1
      - name: Create Fake .env File (dotenvy_macro requirement)
        run: |
          touch src-tauri/.env
          echo APTABASE_KEY=${{ secrets.APTABASE_KEY }} >> src-tauri/.env
      - name: Install Dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev \
              build-essential \
              curl \
              wget \
              file \
              libssl-dev \
              libgtk-3-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev
          sudo apt-get install -y javascriptcoregtk-4.1 \
              libsoup-3.0 \
              webkit2gtk-4.1
      - name: Install Rust
        uses: dtolnay/rust-toolchain@d8352f6b1d2e870bc5716e7a6d9b65c4cc244a1a # master
        with:
          toolchain: stable
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@2e7f9ec7921547d4b46598398ca573513895d0bd # v0.0.4
      - name: Install Dependencies and Build
        run: |
          bun install
          bun run build
      - name: Build the Tauri App
        uses: tauri-apps/tauri-action@ede250cf1ae6fda99f9cd25bf92853221941d94c # dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'v__VERSION__'
          releaseDraft: true
          prerelease: false
