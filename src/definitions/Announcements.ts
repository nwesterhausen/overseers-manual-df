const Definition = {
  ERA_CHANGE: { example: 'The world has passed into The Dwarven Age.' },
  ENDGAME_EVENT_1: { example: '', description: 'Discovery of the HFS' },
  ENDGAME_EVENT_1B: { example: '', description: 'Discovery of the HFS' },
  ENDGAME_EVENT_2: { example: '', description: 'Discovery of the HFS' },
  FEATURE_DISCOVERY: {
    example: 'You have discovered an expansive cavern deep underground.',
    description: 'Discovery of caverns and their various features',
  },
  STRUCK_DEEP_METAL: { example: 'Raw adamantine! Praise the miners!', description: 'Striking adamantine' },
  STRUCK_MINERAL: { example: 'You have struck mica!', description: 'Striking a mineral while mining' },
  STRUCK_ECONOMIC_MINERAL: { example: 'You have struck hematite!', description: 'Striking a mineral while mining' },
  COMBAT_TWIST_WEAPON: { example: '' },
  COMBAT_LET_ITEM_DROP: { example: '' },
  COMBAT_START_CHARGE: { example: 'The Swordsdwarf charges at The Wolf!' },
  COMBAT_SURPRISE_CHARGE: { example: "The Wolf looks suprised by the ferocity of The Swordsdwarf's onslaught!" },
  COMBAT_JUMP_DODGE_PROJ: { example: 'The Wolf jumps away from the flying +bronze bolt+!' },
  COMBAT_JUMP_DODGE_STRIKE: { example: '' },
  COMBAT_DODGE: { example: '' },
  COMBAT_COUNTERSTRIKE: { example: '' },
  COMBAT_BLOCK: { example: '' },
  COMBAT_PARRY: { example: '' },
  COMBAT_CHARGE_COLLISION: { example: 'The Swordsdwarf collides with The Wolf!' },
  COMBAT_CHARGE_DEFENDER_TUMBLES: { example: 'The Wolf is knocked over and tumbles backwards!' },
  COMBAT_CHARGE_DEFENDER_KNOCKED_OVER: { example: 'The Wolf is knocked over!' },
  COMBAT_CHARGE_ATTACKER_TUMBLES: { example: '' },
  COMBAT_CHARGE_ATTACKER_BOUNCE_BACK: { example: 'The Swordsdwarf bounces backwards!' },
  COMBAT_CHARGE_TANGLE_TOGETHER: { example: '' },
  COMBAT_CHARGE_TANGLE_TUMBLE: { example: 'They tangle together and tumble forward!' },
  COMBAT_CHARGE_RUSH_BY: { example: '' },
  COMBAT_CHARGE_MANAGE_STOP: { example: '' },
  COMBAT_CHARGE_OBSTACLE_SLAM: { example: '' },
  COMBAT_WRESTLE_LOCK: { example: '' },
  COMBAT_WRESTLE_CHOKEHOLD: { example: '' },
  COMBAT_WRESTLE_TAKEDOWN: {
    example: "The Swordsdwarf takes The Wolf down by the neck with The Swordsdwarf's right lower arm!",
  },
  COMBAT_WRESTLE_THROW: {
    example: "The Swordsdwarf throws The Wolf by the neck with The Swordsdwarf's right lower arm!",
  },
  COMBAT_WRESTLE_RELEASE_LOCK: { example: '' },
  COMBAT_WRESTLE_RELEASE_CHOKE: { example: '' },
  COMBAT_WRESTLE_RELEASE_GRIP: { example: '' },
  COMBAT_WRESTLE_STRUGGLE: { example: '' },
  COMBAT_WRESTLE_RELEASE_LATCH: { example: '' },
  COMBAT_WRESTLE_STRANGLE_KO: { example: '' },
  COMBAT_WRESTLE_ADJUST_GRIP: { example: '' },
  COMBAT_GRAB_TEAR: { example: '' },
  COMBAT_STRIKE_DETAILS: { example: '' },
  COMBAT_STRIKE_DETAILS_2: { example: '' },
  COMBAT_EVENT_ENRAGED: { example: 'The Wolf has become enraged!' },
  COMBAT_EVENT_STUCKIN: { example: 'The *bronze spear* has lodged firmly in the wound!' },
  COMBAT_EVENT_LATCH_BP: { example: '' },
  COMBAT_EVENT_LATCH_GENERAL: { example: 'The Wolf latches on firmly!' },
  COMBAT_EVENT_PROPELLED_AWAY: { example: 'The Wolf is propelled away by the force of the blow!' },
  COMBAT_EVENT_KNOCKED_OUT: { example: 'The Wolf has been knocked unconscious!' },
  COMBAT_EVENT_STUNNED: { example: 'The Wolf has been stunned!' },
  COMBAT_EVENT_WINDED: { example: 'The Wolf is having trouble breathing!' },
  COMBAT_EVENT_NAUSEATED: { example: 'The Wolf looks sick!' },
  MIGRANT_ARRIVAL_NAMED: { example: '', description: '' },
  MIGRANT_ARRIVAL: { example: '', description: 'The arrival of migrants' },
  DIG_CANCEL_WARM: {
    example: 'Digging designation cancelled: warm stone located.',
    description: 'The cancellation of a mining task due to potentially dangerous stone.',
  },
  DIG_CANCEL_DAMP: {
    example: 'Digging designation cancelled: damp stone located.',
    description: 'The cancellation of a mining task due to potentially dangerous stone.',
  },
  BEAST_AMBUSH: { example: '', description: 'Discovering an ambush' },
  AMBUSH_DEFENDER: { example: '', description: 'Discovering an ambush' },
  AMBUSH_RESIDENT: { example: '', description: 'Discovering an ambush' },
  AMBUSH_HERO: { example: '', description: 'Discovering an ambush' },
  AMBUSH_THIEF: { example: 'Thief! Protect the hoard from skulking filth!', description: 'Discovering an ambush' },
  AMBUSH_THIEF_SUPPORT_SKULKING: { example: '', description: 'Discovering an ambush' },
  AMBUSH_THIEF_SUPPORT_NATURE: { example: '', description: 'Discovering an ambush' },
  AMBUSH_THIEF_SUPPORT: { example: '', description: 'Discovering an ambush' },
  AMBUSH_MISCHIEVOUS: { example: 'A gremlin! Drive it away!', description: 'Discovering an ambush' },
  AMBUSH_SNATCHER: { example: 'Snatcher! Protect the children!', description: 'Discovering an ambush' },
  AMBUSH_SNATCHER_SUPPORT: { example: '', description: 'Discovering an ambush' },
  AMBUSH_AMBUSHER_NATURE: { example: '', description: 'Discovering an ambush' },
  AMBUSH_AMBUSHER: { example: '', description: 'Discovering an ambush' },
  AMBUSH_INJURED: { example: '', description: 'Discovering an ambush' },
  AMBUSH_OTHER: { example: '', description: 'Discovering an ambush' },
  AMBUSH_INCAPACITATED: { example: '', description: 'Discovering an ambush' },
  CARAVAN_ARRIVAL: { example: 'A caravan from Sarvesh Langgud has arrived.', description: 'Arrival of a caravan' },
  NOBLE_ARRIVAL: { example: '', description: 'Arrival of a noble' },
  D_MIGRANTS_ARRIVAL: { example: 'Some migrants have arrived.', description: 'Arrival of a migrant wave' },
  D_MIGRANT_ARRIVAL: { example: 'A migrant has arrived.', description: 'Arrival of a migrant wave' },
  D_MIGRANT_ARRIVAL_DISCOURAGED: {
    example: 'Some migrants have arrived, despite the danger.',
    description: 'Arrival of a migrant wave',
  },
  D_NO_MIGRANT_ARRIVAL: {
    example: 'The fortress attracted no migrants this season.',
    description: 'The failure of migrants to show up in Fortress mode',
  },
  ANIMAL_TRAP_CATCH: { example: '', description: 'A vermin was caught in an animal trap' },
  ANIMAL_TRAP_ROBBED: { example: '', description: 'Failure to catch a vermin' },
  MISCHIEF_LEVER: { example: '', description: 'Fun caused by a certain mischievous creature' },
  MISCHIEF_PLATE: { example: '', description: 'Fun caused by a certain mischievous creature' },
  MISCHIEF_CAGE: {
    example: 'Something has emptied in a cage!',
    description: 'Fun caused by a certain mischievous creature',
  },
  MISCHIEF_CHAIN: { example: '', description: 'Fun caused by a certain mischievous creature' },
  DIPLOMAT_ARRIVAL: { example: '', description: 'Arrival of a diplomat' },
  LIAISON_ARRIVAL: {
    example: 'The outpost liaison Tun Unnostobul from Sarvesh Langgud has arrived.',
    description: 'Arrival of an outpost liaison',
  },
  TRADE_DIPLOMAT_ARRIVAL: { example: '', description: '' },
  CAVE_COLLAPSE: { example: 'A section of the cavern has collapsed!', description: '' },
  BIRTH_CITIZEN: { example: 'Fath Ikudäs, Miner has given birth to a girl.', description: '' },
  BIRTH_ANIMAL: { example: 'Stray Dog (Tame) has given birth to puppies.', description: '' },
  BIRTH_WILD_ANIMAL: { example: '', description: '' },
  STRANGE_MOOD: { example: 'Zon Urabasub, Metalcrafter is taken by a fey mood!', description: '' },
  MADE_ARTIFACT: {
    example: 'Zon Urabasub, Metalcrafter has created Lonsust Stato, a platinum amulet!',
    description: '',
  },
  NAMED_ARTIFACT: {
    example: 'Urdim Arbanerib, Mace Lord has bestowed the name Ostar Kinem upon a iron buckler!',
    description: 'A soldier named their equipment.',
  },
  ITEM_ATTACHMENT: { example: 'Kirkrost Inethnosig, mayor has grown attached to a steel crossbow!', description: '' },
  VERMIN_CAGE_ESCAPE: { example: '', description: 'A vermin escapes from a cage/animal trap' },
  TRIGGER_WEB: { example: '', description: '' },
  MOOD_BUILDING_CLAIMED: {
    example: "Zon Urabasub, Metalcrafter has claimed a Metalsmith's Forge.",
    description: 'A moody dwarf has claimed a workshop',
  },
  ARTIFACT_BEGUN: {
    example: 'Zon Urabasub, Metalcrafter has begun a mysterious construction!',
    description: 'A dwarf has begun construction of an artifact',
  },
  MEGABEAST_ARRIVAL: {
    example:
      'The Forgotten Beast Smespu has come! An enormous hairy ceratopsoid. It has an enormous shell and it is slavering. Its sea green hair is patchy. Beware its deadly dust!',
    description: 'Arrival of a megabeast',
  },
  WEREBEAST_ARRIVAL: {
    example:
      'The Werepanda Onget Râlukerib has come! A large panda twisted into humanoid form. It is crazed for blood and flesh. Its eyes glow spring green. Its sepia hair is long and straight. Now you will know why you fear the night.',
    description: 'Arrival of a werebeast',
  },
  BERSERK_CITIZEN: {
    example: 'Lòr Eralamug, Weaponsmith has gone berserk!',
    description: 'A citizen has gone berserk',
  },
  MAGMA_DEFACES_ENGRAVING: { example: '', description: 'An engraving has melted in magma' },
  ENGRAVING_MELTS: { example: '', description: 'An engraving has melted in magma' },
  MASTERPIECE_CONSTRUCTION: { example: '' },
  MASTER_ARCHITECTURE_LOST: { example: '', description: 'A masterpiece building has been destroyed' },
  MASTER_CONSTRUCTION_LOST: { example: '' },
  ADV_AWAKEN: { example: '', description: 'Related to adventure mode' },
  ADV_SLEEP_INTERRUPTED: { example: '', description: 'Related to adventure mode' },
  ADV_REACTION_PRODUCTS: { example: '', description: 'Related to adventure mode' },
  CANCEL_JOB: { example: 'Sibrek ùshrireshon, Mechanic cancels Load Cage Trap: Needs empty cage.', description: '' },
  ADV_CREATURE_DEATH: { example: 'The Wolf has been struck down.', description: '' },
  CITIZEN_DEATH: {
    example: 'Lòr Eralamug, Weaponsmith has been found dead.',
    description: 'Death of a citizen in fortress mode',
  },
  PET_DEATH: { example: '', description: 'The death of a pet, causing a negative thought for its owner' },
  FALL_OVER: { example: 'The Wolf falls over.', description: '' },
  CAUGHT_IN_FLAMES: {
    example: 'The Swordsdwarf is caught in a burst of forgotten beast flames!',
    description: 'Also used when a creature is caught in poison gas/vapors or cave-in dust.',
  },
  CAUGHT_IN_WEB: { example: 'The Wolf is caught up in a web!', description: '' },
  UNIT_PROJECTILE_SLAM_BLOW_APART: { example: 'The Wolf slams into an obstacle and blows apart!', description: '' },
  UNIT_PROJECTILE_SLAM: { example: 'The Wolf slams into an obstacle!', description: '' },
  UNIT_PROJECTILE_SLAM_INTO_UNIT: { example: 'The Wolf slams into the Wolf!', description: '' },
  VOMIT: { example: 'The Wolf vomits.', description: '' },
  LOSE_HOLD_OF_ITEM: { example: 'The Goblin Bowman loses the hold of the (bismuth bronze bow).', description: '' },
  REGAIN_CONSCIOUSNESS: { example: 'The Wolf regains consciousness.', description: '' },
  FREE_FROM_WEB: { example: 'The Wolf is partially free from the web.', description: '' },
  PARALYZED: { example: 'The Wolf is completely paralyzed!', description: '' },
  OVERCOME_PARALYSIS: { example: '', description: 'A creature is no longer paralyzed' },
  NOT_STUNNED: { example: 'The Wolf is no longer stunned.', description: 'A creature is no longer stunned' },
  EXHAUSTION: { example: '', description: 'Exhaustion' },
  PAIN_KO: { example: 'The Wolf gives in to pain.', description: '' },
  BREAK_GRIP: {
    example: "The Swordsdwarf breaks the grip of the Wolf's teeth on the Swordsdwarf's left upper arm.",
    description: '',
  },
  NO_BREAK_GRIP: {
    example:
      "The Swordsdwarf struggles in vain against the grip of the Wolf's teeth on the Swordsdwarf's left upper arm.",
    description: '',
  },
  BLOCK_FIRE: { example: '', description: 'Blocking a fire attack' },
  BREATHE_FIRE: { example: 'The Fire Imp breathes fire!', description: 'A creature breathes fire' },
  SHOOT_WEB: { example: 'The Giant Cave Spider shoots out thick strands of webbing!', description: '' },
  PULL_OUT_DROP: { example: '', description: '' },
  STAND_UP: { example: 'The Wolf stands up.', description: '' },
  MARTIAL_TRANCE: { example: 'Mörul Bardumoslan, Hammerdwarf has entered a martial trance!', description: '' },
  MAT_BREATH: {
    example: "The Forgotten Beast breathes a cloud of Mirgur Sealhorse the Infinite Shadows's forgotten beast extract!",
    description: '',
  },
  NIGHT_ATTACK_STARTS: { example: 'You are surrounded by incessant cackling.', description: 'Bogeymen attack' },
  NIGHT_ATTACK_ENDS: { example: 'The cackling fades away.', description: 'Bogeymen attack' },
  NIGHT_ATTACK_TRAVEL: { example: 'You are still surrounded by cackling.', description: 'Bogeymen attack' },
  GHOST_ATTACK: {
    example: 'Lòr Eralamug, Ghostly Weaponsmith has arisen and is haunting the fortress!',
    description: '',
  },
  TRAVEL_SITE_DISCOVERY: { example: 'You have discovered a lair.', description: '' },
  TRAVEL_SITE_BUMP: { example: 'You cannot travel through the Lair.', description: '' },
  ADVENTURE_INTRO: {
    example:
      "You've finally got your equipment together, such as it is. Now it's time for action and adventure! In the rush of excitement, you've forgotten where you're going to go. Perhaps some of your friends might have ideas.",
    description: 'Beginning adventure mode',
  },
  CREATURE_SOUND: { example: 'The capybara barks.', description: '' },
  MECHANISM_SOUND: { example: '', description: '' },
  CREATURE_STEALS_OBJECT: { example: 'A gray langur has stolen a -giant bat bone amulet-!', description: '' },
  FOUND_TRAP: { example: '', description: 'Discovery of a trap in adventure mode' },
  BODY_TRANSFORMATION: { example: 'Iden Ustuthod, Fisherdwarf has transformed into a wereskink!', description: '' },
  INTERACTION_ACTOR: { example: '', description: 'See Interaction token#VERB' },
  INTERACTION_TARGET: { example: '', description: 'See Interaction token#TARGET_VERB' },
  UNDEAD_ATTACK: { example: 'The dead walk. Hide while you still can!', description: 'Arrival of a horde of undead.' },
  CITIZEN_MISSING: { example: 'Lòr Eralamug, Weaponsmith has been missing for a week.', description: '' },
  PET_MISSING: { example: '', description: 'A pet has gone missing' },
  STRANGE_RAIN_SNOW: { example: 'It is raining rotten sludge!', description: 'The appearance of unusual weather' },
  STRANGE_CLOUD: { example: 'A cloud of haunting fog has drifted nearby!' },
  SIMPLE_ANIMAL_ACTION: { example: '', description: '' },
  FLOUNDER_IN_LIQUID: { example: 'You flounder in the water!', description: '' },
  TRAINING_DOWN_TO_SEMI_WILD: {
    example: 'The Stray war Cave Dragon (Semi-Wild) has forgotten its training!',
    description:
      'A trained animal has reverted to a semi-wild state (Fortress mode). If the animal is not trained properly, it will become wild and possibly attack your dwarves.',
  },
  TRAINING_FULL_REVERSION: {
    example: 'The war Cave Dragon has reverted to a wild state!',
    description: 'An animal has reverted to a wild state (follows the previous announcement)',
  },
  ANIMAL_TRAINING_KNOWLEDGE: {
    example: 'The dwarves of the Monastery of Tin are now quite knowledgable cave dragon trainers.',
    description: 'See Animal trainer',
  },
  SKIP_ON_LIQUID: { example: '', description: '' },
  DODGE_FLYING_OBJECT: { example: '', description: 'Dodging a shot arrow' },
  REGULAR_CONVERSATION: {
    example: "Caspa Linkon, Human Swordsman: I must pray to Uspram Boldyell the Contest of Stability. I'm uneasy.",
    description: '',
  },
  CONFLICT_CONVERSATION: {
    example: 'Caspa Linkon, Human Swordsman: This is my fight too. I will take revenge!',
    description: '',
  },
  FLAME_HIT: { example: '', description: '' },
  EMBRACE: { example: '', description: '' },
  BANDIT_EMPTY_CONTAINER: { example: '', description: '' },
  BANDIT_GRAB_ITEM: { example: '', description: '' },
  COMBAT_EVENT_ATTACK_INTERRUPTED: {
    example: "The Wolf's attack is interrupted!",
    description: "Wrestling interrupts opponent's attack",
  },
  COMBAT_WRESTLE_CATCH_ATTACK: { example: '', description: '' },
  FAIL_TO_GRAB_SURFACE: { example: '', description: 'Failing to grab a tile' },
  LOSE_HOLD_OF_SURFACE: { example: '', description: 'Losing hold of a surface while climbing' },
  TRAVEL_COMPLAINT: { example: '', description: '' },
  LOSE_EMOTION: { example: '', description: '' },
  REORGANIZE_POSSESSIONS: { example: 'The Human Pikeman reorganizes his possessions.', description: '' },
  PUSH_ITEM: { example: '', description: '' },
  DRAW_ITEM: { example: '', description: '' },
  STRAP_ITEM: { example: '', description: '' },
  GAIN_SITE_CONTROL: {
    example: 'You are now in control of Tanfield, ruling The Ignition of Churches from The Holy Saturninity.',
    description: '',
  },
  FORT_POSITION_SUCCESSION: { example: '', description: '' },
  STRESSED_CITIZEN: { example: 'Lòr Eralamug, Weaponsmith is stumbling obliviously!', description: '' },
  CITIZEN_LOST_TO_STRESS: { example: 'Lòr Eralamug, Weaponsmith has gone stark raving mad!', description: '' },
  CITIZEN_TANTRUM: { example: 'Lòr Eralamug, Weaponsmith is throwing a tantrum!', description: '' },
  MOVED_OUT_OF_RANGE: {
    example: 'The Wolf has moved out of range!',
    description: 'An attacked creature has moved out of range',
  },
  CANNOT_JUMP: { example: 'You cannot jump while prone.', description: '' },
  NO_TRACKS: { example: '', description: '' },
  ALREADY_SEARCHED_AREA: { example: "You've already searched this area recently.", description: '' },
  SEARCH_FOUND_SOMETHING: { example: '', description: '' },
  SEARCH_FOUND_NOTHING: { example: 'Your intense search turns up nothing.', description: '' },
  NOTHING_TO_INTERACT: { example: 'You have nothing with which to interact.', description: '' },
  NOTHING_TO_EXAMINE: { example: 'You have nothing to examine.', description: '' },
  YOU_YIELDED: { example: 'You assume a submissive posture.', description: 'Yielding in adventure mode' },
  YOU_UNYIELDED: { example: 'You no longer assume a submissive posture.' },
  YOU_STRAP_ITEM: { example: 'You strap the steel short sword to your Upper body.', description: '' },
  YOU_DRAW_ITEM: { example: 'You draw the steel short sword with your Right hand.', description: '' },
  NO_GRASP_TO_DRAW_ITEM: { example: 'You do not have a free grasp for the steel short sword.', description: '' },
  NO_ITEM_TO_STRAP: { example: 'You have nothing left to draw or put away.', description: '' },
  NO_INV_TO_REMOVE: { example: 'You have nothing left to remove.', description: '' },
  NO_INV_TO_WEAR: { example: 'You have nothing left to wear.', description: '' },
  NO_INV_TO_EAT: { example: 'You have nothing left to eat or drink.', description: '' },
  NO_INV_TO_CONTAIN: { example: 'You have nothing to put inside a container.', description: '' },
  NO_INV_TO_DROP: { example: 'You have nothing left to drop.', description: '' },
  NOTHING_TO_PICK_UP: { example: 'There is nothing to pick up here.', description: '' },
  NO_INV_TO_THROW: { example: 'You have nothing left to throw.', description: '' },
  NO_INV_TO_FIRE: { example: 'You have nothing left to fire.', description: '' },
  CURRENT_SMELL: { example: '', description: 'Smelling in adventure mode' },
  CURRENT_WEATHER: { example: 'The sky is clear above you.', description: 'Checking weather in adventure mode' },
  CURRENT_TEMPERATURE: { example: '', description: 'Checking temperature in adventure mode' },
  CURRENT_DATE: { example: 'It is the 14th of Granite, 250.', description: 'Checking time in adventure mode' },
  NO_GRASP_FOR_PICKUP: { example: 'You do not have a free grasp.', description: '' },
  CANNOT_CLIMB: { example: '', description: 'You are unable to climb' },
  CANNOT_STAND: { example: '', description: 'You are unable to stand up' },
  MUST_UNRETRACT_FIRST: { example: 'You must unroll.', description: '' },
  CANNOT_REST: { example: '', description: '' },
  CANNOT_MAKE_CAMPFIRE: { example: '', description: '' },
  MADE_CAMPFIRE: { example: '', description: 'You make a campfire' },
  CANNOT_SET_FIRE: { example: '', description: '' },
  SET_FIRE: { example: '', description: 'You set a fire' },
  DAWN_BREAKS: { example: 'The dawn is breaking.', description: 'Change of the time of day' },
  NOON: { example: '' },
  NIGHTFALL: { example: 'The night is falling.' },
  NO_INV_INTERACTION: { example: '', description: '' },
  EMPTY_CONTAINER: {
    example: 'You empty your giant moon snail leather backpack.',
    description: 'Emptying a container in adventure mode',
  },
  TAKE_OUT_OF_CONTAINER: { example: '', description: 'Taking an item out of container in adventure mode' },
  NO_CONTAINER_FOR_ITEM: { example: "You don't have a suitable container.", description: '' },
  PUT_INTO_CONTAINER: { example: '', description: '' },
  EAT_ITEM: { example: '', description: 'You eat an item' },
  DRINK_ITEM: { example: '', description: 'You drink an item' },
  CONSUME_FAILURE: { example: '', description: 'You lick an item' },
  DROP_ITEM: { example: '', description: 'You drop an item' },
  PICK_UP_ITEM: { example: '', description: 'You pick up an item' },
  YOU_BUILDING_INTERACTION: { example: '', description: 'Interaction with a building in adventure mode' },
  YOU_ITEM_INTERACTION: { example: '', description: 'Interaction with an item in adventure mode' },
  YOU_TEMPERATURE_EFFECTS: { example: 'You are melting!', description: '' },
  RESOLVE_SHARED_ITEMS: { example: '', description: '' },
  COUGH_BLOOD: { example: '', description: 'Coughing blood' },
  VOMIT_BLOOD: { example: '', description: 'Vomiting blood' },
  POWER_LEARNED: { example: '', description: 'Learning a new power' },
  YOU_FEED_ON_SUCKEE: { example: '', description: 'Sucking blood' },
  PROFESSION_CHANGES: { example: '', description: 'Changing a profession' },
  RECRUIT_PROMOTED: { example: '', description: '' },
  SOLDIER_BECOMES_MASTER: { example: '', description: 'A soldier has mastered a weapon skill' },
  MERCHANTS_UNLOADING: {
    example: 'The merchants from Sarvesh Langgud have arrived and are unloading their goods.',
    description: '',
  },
  MERCHANTS_NEED_DEPOT: { example: 'The merchants need a trade depot to unload their goods.', description: '' },
  MERCHANT_WAGONS_BYPASSED: { example: '', description: "The merchants' wagons have bypassed the site" },
  MERCHANTS_LEAVING_SOON: { example: 'The merchants from Sarvesh Langgud will be leaving soon.', description: '' },
  MERCHANTS_EMBARKED: {
    example: 'The merchants from Sarvesh Langgud have embarked on their journey.',
    description: '',
  },
  PET_LOSES_DEAD_OWNER: { example: '', description: '' },
  PET_ADOPTS_OWNER: { example: '', description: '' },
  VERMIN_BITE: {
    example: 'The Stray Cow (Tame) has been stung by a honey bee!',
    description: 'A vermin bites/stings a creature',
  },
  UNABLE_TO_COMPLETE_BUILDING: { example: 'The dwarves were unable to complete the Wall.', description: '' },
  JOBS_REMOVED_FROM_UNPOWERED_BUILDING: { example: '', description: '' },
  CITIZEN_SNATCHED: {
    example: 'A kidnapper has made off with the Dwarven child Ustuth Therlethendok!',
    description: '',
  },
  VERMIN_DISTURBED: { example: '', description: '' },
  LAND_GAINS_STATUS: { example: '', description: '' },
  LAND_ELEVATED_STATUS: { example: '', description: '' },
  MASTERPIECE_CRAFTED: {
    example: "Fikod Razulban has created a masterpiece ☼Juwog Minedscratch's forgotten beast silk cloth☼",
    description: '',
  },
  ARTWORK_DEFACED: { example: 'A foolish builder defaced a Edëm Stinzas!', description: 'A masterwork was destroyed' },
  ANIMAL_TRAINED: { example: 'An animal has become a Stray war Dog.', description: '' },
  DYED_MASTERPIECE: { example: '', description: 'An item has been masterfully dyed' },
  COOKED_MASTERPIECE: {
    example: 'Atír Sigunzlir has cooked a masterful meal!',
    description: 'Cooking a masterful meal',
  },
  MANDATE_ENDS: { example: '', description: 'A noble ended a mandate' },
  SLOWDOWN_ENDS: { example: '', description: '' },
  FAREWELL_HELPER: { example: '', description: '' },
  ELECTION_RESULTS: { example: '', description: '' },
  SITE_PRESENT: { example: '', description: 'A site already exists at the location you are trying to embark to' },
  CONSTRUCTION_SUSPENDED: { example: '', description: 'Construction of a building was suspended' },
  LINKAGE_SUSPENDED: { example: '', description: '' },
  QUOTA_FILLED: { example: '', description: 'A work order was completed' },
  JOB_OVERWRITTEN: { example: '', description: '' },
  NOTHING_TO_CATCH_IN_WATER: { example: 'There is nothing to catch in the river.', description: '' },
  DEMAND_FORGOTTEN: { example: '', description: '' },
  NEW_DEMAND: { example: '', description: '' },
  NEW_MANDATE: { example: '', description: '' },
  PRICES_ALTERED: { example: '', description: '' },
  NAMED_RESIDENT_CREATURE: { example: '', description: '' },
  SOMEBODY_GROWS_UP: { example: '', description: 'Somebody has grown up' },
  GUILD_REQUEST_TAKEN: { example: '', description: '' },
  GUILD_WAGES_CHANGED: { example: '', description: '' },
  NEW_WORK_MANDATE: { example: '', description: '' },
  CITIZEN_BECOMES_SOLDIER: {
    example: '',
    description: 'Shown when dwarves assume soldier role, for standing orders or direct orders',
  },
  CITIZEN_BECOMES_NONSOLDIER: {
    example: '',
    description: 'Shown when soldier dwarves no longer have active miliraty orders, and return to civilian life',
  },
  PARTY_ORGANIZED: { example: '', description: '' },
  POSSESSED_TANTRUM: { example: '', description: 'A dwarf possessed by a ghost is throwing a tantrum' },
  BUILDING_TOPPLED_BY_GHOST: { example: '', description: 'A building was toppled by a ghost' },
  MASTERFUL_IMPROVEMENT: { example: '', description: 'An item has been masterfully decorated' },
  MASTERPIECE_ENGRAVING: { example: '', description: 'A masterpiece engraving was created' },
  MARRIAGE: { example: '', description: '' },
  NO_MARRIAGE_CELEBRATION: { example: '', description: '' },
  CURIOUS_GUZZLER: { example: '', description: 'An animal drank stockpiled booze' },
  WEATHER_BECOMES_CLEAR: { example: 'The weather has cleared.', description: '' },
  WEATHER_BECOMES_SNOW: { example: 'A snow storm has come.', description: '' },
  WEATHER_BECOMES_RAIN: { example: 'It has started raining.', description: '' },
  SEASON_WET: { example: '', description: '' },
  SEASON_DRY: { example: '', description: '' },
  SEASON_SPRING: { example: 'Spring has arrived!', description: 'Change of a season' },
  SEASON_SUMMER: { example: 'It is now summer.', description: 'Change of a season' },
  SEASON_AUTUMN: { example: 'Autumn has come.', description: 'Change of a season' },
  SEASON_WINTER: { example: 'Winter is here.', description: 'Change of a season' },
  GUEST_ARRIVAL: {
    example: 'Vusdom Ilerane, Human Spearman is visiting.',
    description: 'Arrival of visitors, and also squads returning from missions.',
  },
  CANNOT_SPEAK: {
    example: 'A troglodyte cannot speak.',
    description: "When playing adventure mode as a creature that doesn't speak.",
  },
  RESEARCH_BREAKTHROUGH: { example: '', description: '' },
  SERVICE_ORDER_DELIVERY: { example: '', description: '' },
  PERFORMANCE_START_FAILURE: { example: '', description: '' },
  BEGIN_ACTIVITY: { example: '', description: '' },
  MIDDLE_OF_ACTIVITY: { example: '', description: '' },
  ACTIVITY_SECTION_CHANGE: { example: '', description: '' },
  CONCLUDE_ACTIVITY: { example: '', description: '' },
  LEARNED_WRITTEN_CONTENT: { example: '', description: '' },
  LEARNED_ART_FORM: { example: '', description: '' },
  PERFORMER_UPDATE: { example: '', description: '' },
  BUILDING_DESTROYED_OR_TOPPLED: { example: '', description: 'A creature destroyed a building' },
  DEITY_CURSE: { example: '', description: 'Being cursed by a deity' },
  COMPOSITION_COMPLETE: { example: '', description: '' },
  COMPOSITION_FAILED: { example: '', description: '' },
  NEW_APPRENTICESHIP: { example: '', description: '' },
  PETITION_IGNORED: { example: 'The petition of Vusdom Ilerane, Human Spearman has been ignored.', description: '' },
  CANNOT_CHOP_TREE: { example: 'You cannot fell trees in the arena.', description: '' },
  CHOP_TREE: { example: '', description: 'Chopping trees in adventure mode' },
  CANNOT_CONSTRUCT: { example: 'You cannot construct at this site.', description: '' },
  RUMOR_SPREAD: { example: '', description: '' },
  SERVICE_ORDER_RUMOR_RECEIVED: { example: '', description: '' },
  RETURNING_RUMOR_RECEIVED: { example: '', description: '' },
  NEW_HOLDING: { example: '', description: '' },
  NEW_MARKET_LINK: { example: '', description: '' },
  EMERGENCY_TACTICAL_CONTROL: { example: '', description: '' },
  AGREEMENT_SATISFIED: { example: '', description: '' },
  AGREEMENT_WARNING: { example: '', description: '' },
  AGREEMENT_ABANDONED: { example: '', description: '' },
  NEW_GUILD: { example: '', description: '' },
  CRIME_WITNESS_HANDOFF: { example: '', description: '' },
  CRIME_WITNESS_STOLEN: { example: '', description: '' },
  CRIME_WITNESS_ITEM_MOVED: { example: '', description: '' },
  CRIME_WITNESS_ITEM_MISSING: { example: '', description: '' },
  MOUNT: { example: '', description: '' },
  CANNOT_MOUNT: { example: '', description: '' },
  FAILED_MOUNT: { example: '', description: '' },
  DISMOUNT: { example: '', description: '' },
  FAILED_DISMOUNT: { example: '', description: '' },
  DIPLOMAT_LEFT_UNHAPPY: { example: '', description: '' },
  EMBARK_MESSAGE: { example: '', description: '' },
  FIRST_CARAVAN_ARRIVAL: { example: '', description: '' },
  MONARCH_ARRIVAL: { example: '', description: '' },
  HASTY_MONARCH: { example: '', description: '' },
  SATISFIED_MONARCH: {
    example:
      'The queen Fikod Rîsennikot is satisfied with their position here. Everything is properly royal, properly furnished. And yet? A true Mountainhome must have a true throne! And a true ruler requires seven symbols, symbols not of this world. Mere steel will not suffice. Deeper. We must dig deeper.',
    description: '',
  },
  MOUNTAINHOME: { example: '', description: 'You have acquired the status of mountainhome, the new dwarven capital' },
  FOOD_WARNING: { example: '', description: '' },
};

export type AnnouncementDescription = {
  exampleText: string;
  longDescription: string;
};

export function getDescriptionByKey(key: string): AnnouncementDescription {
  const result = { exampleText: '', longDescription: '' };
  if (Object.keys(Definition).indexOf(key) === -1) {
    return result;
  }
  const description = Definition[key];
  if (typeof description.example !== 'undefined') {
    result.exampleText = description.example;
  }
  if (typeof description.description !== 'undefined') {
    result.longDescription = description.description;
  }

  return result;
}
