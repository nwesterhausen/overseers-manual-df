#!/bin/bash

# Expects the new version to be passed as the first argument
if [ -z "$1" ]; then
  echo "Please provide the new version as the first argument"
  exit 1
fi

# Check if the version is a valid semver version
VERSION=$1
if ! [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
  echo "Invalid version format. Please provide a valid semver version"
  exit 1
fi

# Check if the package.json file exists
if [ ! -f package.json ]; then
  echo "package.json not found"
  exit 1
fi

CURRENT_VERSION=$(jq -r '.version' package.json)

# If an extra argument is provided, check if it matches "dry-run"
# If it does, don't update the package.json, just print the changes alongside the package name
if [ "$2" == "dry-run" ]; then
  echo "Dry run mode"
  echo "Current version: $CURRENT_VERSION"
  echo "New version: $VERSION"
  # verify the sed command
  sed -n -e "s/\"version\": \"$CURRENT_VERSION\"/\"version\": \"$VERSION\"/p" package.json
  exit 0
fi

>&2 echo "Updating package.json to version $VERSION (from $CURRENT_VERSION)"
# Update the version in the package.json
sed -i -e "s/\"version\": \"$CURRENT_VERSION\"/\"version\": \"$VERSION\"/" package.json
